$(document).ready(function() {
    /*
    Takes in a username, a button name, and a button type (optional), and
    returns HTML output to display the given data in a bootstrap list.

    @param username:   The username to display
    @param buttonName: The name of the button to display
    @param buttonType: The bootstrap class of the button (danger, default, etc.)

    @return String: string formatted to be put into a bootstrap list.
    */
    function formatUserList(username, buttonName, buttonType = 'default') {
        var userHTML = "";

        userHTML += "<li class='list-group-item clearfix'>";
        userHTML += "<span><a href='/profile/" + username + "/'>" + username + "</a></span>";
        userHTML += "<span class='pull-right'><a href='#' id='" + buttonName + "-" + username + "' class='btn btn-" + buttonType + " " + buttonName + "-button'>" + buttonName + "</a></span>";
        userHTML += "</li>";

        return userHTML
    }

    /*
    Formats a timestamp from Yesod's persistent model into "DD/MM/YY at HH:MM".
    The timestamp given must be an instance of javascript's Date.

    @param timestamp: The timestamp to format as a javascript Date object

    @return String: The formatted timestamp
    */
    function formatTimeStamp(timestamp) {
        console.log(timestamp);
        var messageDateString = timestamp.getDate() + "/" + timestamp.getMonth() + "/" + timestamp.getFullYear();
        messageDateString += " at " + timestamp.getHours() + ":" + timestamp.getMinutes();

        return messageDateString;
    }

    /*
    Formats each message into HTML to be shown on the frontend and then displays the message.

    @param message:           The contents of the message
    @param messageDateString: Date and time as a string
    @param userId:            The Id of the user who posted the message
    */
    function formatMessage(message, messageDateString, userId) {
        var messagesHeader = $("#messages-header");

        $.ajax(
            {
                url: "/user/id/" + userId,
                type: "GET",
                success: function (result) {
                    var messagesHtml = ""

                    if (result.length === 0) {
                        messagesHtml += "Error retrieving message. Please contact support."
                    } else {
                        username = result[0].username;

                        messagesHtml += "<li class='list-group-item'>";
                        messagesHtml += "<h4 class='list-group-item-heading'>" + message + "</h4>";
                        messagesHtml += "<p class='list-group-item-text'>"
                        messagesHtml += "Posted by <a href='/profile/" + username + "/'>" + username + "</a>";
                        messagesHtml += " on " + messageDateString;
                        messagesHtml += "</p>"
                        messagesHtml += "</li>";

                        $('.user-wires .loader-container').remove()
                        messagesHeader.after(messagesHtml);
                    }
                }
            }
        )
    }

    // Load all messages posted by followers using AJAX
    function loadFollowMessages() {
        var messagesHtml = ""
        $.ajax(
            {
                url: "@{MessagesR followIds}",
                type: "GET",
                success: function (result) {
                    var messagesHeader = $("#messages-header");
                    // Display a message if the user has not posted any messages
                    if (result.length === 0) {
                        messagesHeader.nextAll('li').remove();
                        messagesHeader.after("<li class='list-group-item'>This user has not created any wires</li>")
                    } else {
                        // Display messages if we received a result from the server
                        $.each(result, function(index, messageObject) {
                            // Format the date from the message to
                            var messageDate = new Date(messageObject.created);
                            var messageDateString = formatTimeStamp(messageDate)

                            formatMessage(messageObject.message, messageDateString, messageObject.userId)
                        });
                    }
                }
            }
        )
    }

    /*
    Load users not followed by the currently logged in user or, if user is
    not logged in, load some random users.
    */
    function loadRecommendedUsers() {
        // Retrieve other users to display on the frontend
        $.ajax(
            {
                url: "@{UserGetAllExcludingFollowingR}",
                type: "GET",
                success: function (result) {
                    var usersHTML = "";
                    var recommendedUsersHeader = $("#recommended-users-header");

                    result.forEach(function(userObject) {
                        usersHTML += formatUserList(userObject.username, "follow");
                    });

                    if (usersHTML === "") {
                        usersHTML += "<li class='list-group-item clearfix'>";
                        usersHTML += "<span>There are no users to recommend at this time</span>";
                        usersHTML += "</li>";
                    }

                    recommendedUsersHeader.nextAll('li').remove();
                    recommendedUsersHeader.after(usersHTML);

                    $('.follow-button').click(function() {
                        var element = this;
                        var username = element.id.split('-')[1];

                        $.ajax(
                            {
                                url: "/follow/" + username + "/",
                                types: "GET",
                                success: function (result) {
                                    element.classList.add('btn-success');
                                    element.classList.add('disabled');
                                    element.innerHTML = '<span class="glyphicon glyphicon-ok-circle"></span>';
                                    loadRecommendedUsers();
                                    loadFollows();
                                }
                            }
                        )
                    })
                }
            }
        )
    }


    /*
    Load users who are being followed by the user whose profile page is being viewed
    */
    function loadFollows() {
        $.ajax(
            {
                url: "@{FollowingR username}",
                type: "GET",
                success: function (result) {
                    if (!result.success && result.success !== undefined) {
                        console.log(result.message)
                    } else {
                        var usersHTML = "";
                        var followingHeader = $("#following-header");

                        if (result.length !== 0) {
                            // Store following user Ids in an array
                            var followingUserIds = [];
                            result.forEach(function (followInfo) {
                                followingUserIds.push(followInfo.followingId);
                            });

                            $.ajax(
                                {
                                    url: "/users/" + followingUserIds.join('/'),
                                    type: "GET",
                                    success: function (result) {
                                        result.forEach(function(userObject) {
                                            usersHTML += formatUserList(userObject.username, "unfollow", "danger");
                                        });

                                        followingHeader.nextAll('li').remove();
                                        followingHeader.after(usersHTML);

                                        $('.unfollow-button').click(function() {
                                            var element = this;
                                            var username = element.id.split('-')[1];

                                            $.ajax(
                                                {
                                                    url: "/follow/" + username + "/",
                                                    types: "GET",
                                                    success: function (result) {
                                                        console.log(result);
                                                        console.log(element);
                                                        element.classList.add('btn-success');
                                                        element.classList.add('disabled');
                                                        element.innerHTML = '<span class="glyphicon glyphicon-ok-circle"></span>'
                                                        loadRecommendedUsers();
                                                        loadFollows();
                                                    }
                                                }
                                            )
                                        })
                                    }
                                }
                            )
                        } else {
                            usersHTML += "<li class='list-group-item clearfix'>";
                            usersHTML += "<span>This user is not following anyone</span>";
                            usersHTML += "</li>";

                            followingHeader.nextAll('li').remove();
                            followingHeader.after(usersHTML);
                        }
                    }
                }
            }
        )
    }

    /*
    Load users following the person whose profile page is being viewed.
    */
    function loadFollowers() {
        $.ajax(
            {
                url: "@{FollowersR username}",
                type: "GET",
                success: function (result) {
                    if (!result.success && result.success !== undefined) {
                        console.log(result.message)
                    } else {
                        var followersHeader = $("#followers-header");
                        var usersHTML = "";

                        if (result.length !== 0) {
                            // Store follower user Ids in an array
                            var followerUserIds = [];
                            result.forEach(function (followInfo) {
                                followerUserIds.push(followInfo.followerId);
                            });

                            $.ajax(
                                {
                                    url: "/users/" + followerUserIds.join('/'),
                                    type: "GET",
                                    success: function (result) {
                                        result.forEach(function (userObject) {
                                            usersHTML += formatUserList(userObject.username, "visit", "default");
                                        });

                                        followersHeader.nextAll('li').remove();
                                        followersHeader.after(usersHTML);
                                    }
                                }
                            )
                        } else {
                            usersHTML += "<li class='list-group-item clearfix'>";
                            usersHTML += "<span>This user does not have any followers</span>";
                            usersHTML += "</li>";

                            followersHeader.nextAll('li').remove();
                            followersHeader.after(usersHTML);
                        }
                    }
                }
            }
        )
    }

    loadFollowMessages();
    loadRecommendedUsers();
    loadFollows();
    loadFollowers();
});
